//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAManagement.Site.svcProxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcProxy.IProxyService")]
    public interface IProxyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyService/Run", ReplyAction="http://tempuri.org/IProxyService/RunResponse")]
        void Run();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IProxyService/Run", ReplyAction="http://tempuri.org/IProxyService/RunResponse")]
        System.IAsyncResult BeginRun(System.AsyncCallback callback, object asyncState);
        
        void EndRun(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProxyServiceChannel : QAManagement.Site.svcProxy.IProxyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProxyServiceClient : System.ServiceModel.ClientBase<QAManagement.Site.svcProxy.IProxyService>, QAManagement.Site.svcProxy.IProxyService {
        
        private BeginOperationDelegate onBeginRunDelegate;
        
        private EndOperationDelegate onEndRunDelegate;
        
        private System.Threading.SendOrPostCallback onRunCompletedDelegate;
        
        public ProxyServiceClient() {
        }
        
        public ProxyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RunCompleted;
        
        public void Run() {
            base.Channel.Run();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRun(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRun(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRun(System.IAsyncResult result) {
            base.Channel.EndRun(result);
        }
        
        private System.IAsyncResult OnBeginRun(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginRun(callback, asyncState);
        }
        
        private object[] OnEndRun(System.IAsyncResult result) {
            this.EndRun(result);
            return null;
        }
        
        private void OnRunCompleted(object state) {
            if ((this.RunCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunAsync() {
            this.RunAsync(null);
        }
        
        public void RunAsync(object userState) {
            if ((this.onBeginRunDelegate == null)) {
                this.onBeginRunDelegate = new BeginOperationDelegate(this.OnBeginRun);
            }
            if ((this.onEndRunDelegate == null)) {
                this.onEndRunDelegate = new EndOperationDelegate(this.OnEndRun);
            }
            if ((this.onRunCompletedDelegate == null)) {
                this.onRunCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunCompleted);
            }
            base.InvokeAsync(this.onBeginRunDelegate, null, this.onEndRunDelegate, this.onRunCompletedDelegate, userState);
        }
    }
}
